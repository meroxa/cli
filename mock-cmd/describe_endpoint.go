// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/meroxa/root/endpoints/describe_endpoint.go

// Package mock_endpoints is a generated GoMock package.
package mock_cmd

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	meroxa "github.com/meroxa/meroxa-go"
)

// MockDescribeEndpointClient is a mock of describeEndpointClient interface.
type MockDescribeEndpointClient struct {
	ctrl     *gomock.Controller
	recorder *MockDescribeEndpointClientMockRecorder
}

// MockDescribeEndpointClientMockRecorder is the mock recorder for MockDescribeEndpointClient.
type MockDescribeEndpointClientMockRecorder struct {
	mock *MockDescribeEndpointClient
}

// NewMockDescribeEndpointClient creates a new mock instance.
func NewMockDescribeEndpointClient(ctrl *gomock.Controller) *MockDescribeEndpointClient {
	mock := &MockDescribeEndpointClient{ctrl: ctrl}
	mock.recorder = &MockDescribeEndpointClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDescribeEndpointClient) EXPECT() *MockDescribeEndpointClientMockRecorder {
	return m.recorder
}

// GetEndpoint mocks base method.
func (m *MockDescribeEndpointClient) GetEndpoint(ctx context.Context, name string) (*meroxa.Endpoint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEndpoint", ctx, name)
	ret0, _ := ret[0].(*meroxa.Endpoint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEndpoint indicates an expected call of GetEndpoint.
func (mr *MockDescribeEndpointClientMockRecorder) GetEndpoint(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEndpoint", reflect.TypeOf((*MockDescribeEndpointClient)(nil).GetEndpoint), ctx, name)
}
