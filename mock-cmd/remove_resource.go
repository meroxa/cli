// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/remove_resource.go

// Package mock_cmd is a generated GoMock package.
package mock_cmd

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	meroxa "github.com/meroxa/meroxa-go"
)

// MockRemoveResourceClient is a mock of RemoveResourceClient interface.
type MockRemoveResourceClient struct {
	ctrl     *gomock.Controller
	recorder *MockRemoveResourceClientMockRecorder
}

// MockRemoveResourceClientMockRecorder is the mock recorder for MockRemoveResourceClient.
type MockRemoveResourceClientMockRecorder struct {
	mock *MockRemoveResourceClient
}

// NewMockRemoveResourceClient creates a new mock instance.
func NewMockRemoveResourceClient(ctrl *gomock.Controller) *MockRemoveResourceClient {
	mock := &MockRemoveResourceClient{ctrl: ctrl}
	mock.recorder = &MockRemoveResourceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRemoveResourceClient) EXPECT() *MockRemoveResourceClientMockRecorder {
	return m.recorder
}

// DeleteResource mocks base method.
func (m *MockRemoveResourceClient) DeleteResource(ctx context.Context, id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteResource", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteResource indicates an expected call of DeleteResource.
func (mr *MockRemoveResourceClientMockRecorder) DeleteResource(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteResource", reflect.TypeOf((*MockRemoveResourceClient)(nil).DeleteResource), ctx, id)
}

// GetResourceByName mocks base method.
func (m *MockRemoveResourceClient) GetResourceByName(ctx context.Context, name string) (*meroxa.Resource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceByName", ctx, name)
	ret0, _ := ret[0].(*meroxa.Resource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceByName indicates an expected call of GetResourceByName.
func (mr *MockRemoveResourceClientMockRecorder) GetResourceByName(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceByName", reflect.TypeOf((*MockRemoveResourceClient)(nil).GetResourceByName), ctx, name)
}
