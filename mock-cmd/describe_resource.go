// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/meroxa/root/resources/describe.go

// Package mock_cmd is a generated GoMock package.
package mock_cmd

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	meroxa "github.com/meroxa/meroxa-go"
)

// MockDescribeResourceClient is a mock of describeResourceClient interface.
type MockDescribeResourceClient struct {
	ctrl     *gomock.Controller
	recorder *MockDescribeResourceClientMockRecorder
}

// MockDescribeResourceClientMockRecorder is the mock recorder for MockDescribeResourceClient.
type MockDescribeResourceClientMockRecorder struct {
	mock *MockDescribeResourceClient
}

// NewMockDescribeResourceClient creates a new mock instance.
func NewMockDescribeResourceClient(ctrl *gomock.Controller) *MockDescribeResourceClient {
	mock := &MockDescribeResourceClient{ctrl: ctrl}
	mock.recorder = &MockDescribeResourceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDescribeResourceClient) EXPECT() *MockDescribeResourceClientMockRecorder {
	return m.recorder
}

// GetResourceByName mocks base method.
func (m *MockDescribeResourceClient) GetResourceByName(ctx context.Context, name string) (*meroxa.Resource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceByName", ctx, name)
	ret0, _ := ret[0].(*meroxa.Resource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceByName indicates an expected call of GetResourceByName.
func (mr *MockDescribeResourceClientMockRecorder) GetResourceByName(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceByName", reflect.TypeOf((*MockDescribeResourceClient)(nil).GetResourceByName), ctx, name)
}
