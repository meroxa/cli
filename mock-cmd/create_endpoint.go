// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/create_endpoint.go

// Package mock_cmd is a generated GoMock package.
package mock_cmd

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCreateEndpointClient is a mock of CreateEndpointClient interface.
type MockCreateEndpointClient struct {
	ctrl     *gomock.Controller
	recorder *MockCreateEndpointClientMockRecorder
}

// MockCreateEndpointClientMockRecorder is the mock recorder for MockCreateEndpointClient.
type MockCreateEndpointClientMockRecorder struct {
	mock *MockCreateEndpointClient
}

// NewMockCreateEndpointClient creates a new mock instance.
func NewMockCreateEndpointClient(ctrl *gomock.Controller) *MockCreateEndpointClient {
	mock := &MockCreateEndpointClient{ctrl: ctrl}
	mock.recorder = &MockCreateEndpointClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateEndpointClient) EXPECT() *MockCreateEndpointClientMockRecorder {
	return m.recorder
}

// CreateEndpoint mocks base method.
func (m *MockCreateEndpointClient) CreateEndpoint(ctx context.Context, name, protocol, stream string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEndpoint", ctx, name, protocol, stream)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateEndpoint indicates an expected call of CreateEndpoint.
func (mr *MockCreateEndpointClientMockRecorder) CreateEndpoint(ctx, name, protocol, stream interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEndpoint", reflect.TypeOf((*MockCreateEndpointClient)(nil).CreateEndpoint), ctx, name, protocol, stream)
}
