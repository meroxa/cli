// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/whoami.go

// Package mock_cmd is a generated GoMock package.
package mock_cmd

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	meroxa "github.com/meroxa/meroxa-go"
)

// MockGetUserClient is a mock of GetUserClient interface.
type MockGetUserClient struct {
	ctrl     *gomock.Controller
	recorder *MockGetUserClientMockRecorder
}

// MockGetUserClientMockRecorder is the mock recorder for MockGetUserClient.
type MockGetUserClientMockRecorder struct {
	mock *MockGetUserClient
}

// NewMockGetUserClient creates a new mock instance.
func NewMockGetUserClient(ctrl *gomock.Controller) *MockGetUserClient {
	mock := &MockGetUserClient{ctrl: ctrl}
	mock.recorder = &MockGetUserClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetUserClient) EXPECT() *MockGetUserClientMockRecorder {
	return m.recorder
}

// GetUser mocks base method.
func (m *MockGetUserClient) GetUser(ctx context.Context) (*meroxa.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", ctx)
	ret0, _ := ret[0].(*meroxa.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockGetUserClientMockRecorder) GetUser(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockGetUserClient)(nil).GetUser), ctx)
}
