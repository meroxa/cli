// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/meroxa/root/endpoints/list_endpoints.go

// Package mock_endpoints is a generated GoMock package.
package mock_cmd

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	meroxa "github.com/meroxa/meroxa-go"
)

// MocklistEndpointsClient is a mock of listEndpointsClient interface.
type MocklistEndpointsClient struct {
	ctrl     *gomock.Controller
	recorder *MocklistEndpointsClientMockRecorder
}

// MocklistEndpointsClientMockRecorder is the mock recorder for MocklistEndpointsClient.
type MocklistEndpointsClientMockRecorder struct {
	mock *MocklistEndpointsClient
}

// NewMocklistEndpointsClient creates a new mock instance.
func NewMocklistEndpointsClient(ctrl *gomock.Controller) *MocklistEndpointsClient {
	mock := &MocklistEndpointsClient{ctrl: ctrl}
	mock.recorder = &MocklistEndpointsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocklistEndpointsClient) EXPECT() *MocklistEndpointsClientMockRecorder {
	return m.recorder
}

// ListEndpoints mocks base method.
func (m *MocklistEndpointsClient) ListEndpoints(ctx context.Context) ([]meroxa.Endpoint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListEndpoints", ctx)
	ret0, _ := ret[0].([]meroxa.Endpoint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListEndpoints indicates an expected call of ListEndpoints.
func (mr *MocklistEndpointsClientMockRecorder) ListEndpoints(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEndpoints", reflect.TypeOf((*MocklistEndpointsClient)(nil).ListEndpoints), ctx)
}
