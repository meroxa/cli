// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/remove_endpoint.go

// Package mock_cmd is a generated GoMock package.
package mock_cmd

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRemoveEndpointClient is a mock of RemoveEndpointClient interface.
type MockRemoveEndpointClient struct {
	ctrl     *gomock.Controller
	recorder *MockRemoveEndpointClientMockRecorder
}

// MockRemoveEndpointClientMockRecorder is the mock recorder for MockRemoveEndpointClient.
type MockRemoveEndpointClientMockRecorder struct {
	mock *MockRemoveEndpointClient
}

// NewMockRemoveEndpointClient creates a new mock instance.
func NewMockRemoveEndpointClient(ctrl *gomock.Controller) *MockRemoveEndpointClient {
	mock := &MockRemoveEndpointClient{ctrl: ctrl}
	mock.recorder = &MockRemoveEndpointClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRemoveEndpointClient) EXPECT() *MockRemoveEndpointClientMockRecorder {
	return m.recorder
}

// DeleteEndpoint mocks base method.
func (m *MockRemoveEndpointClient) DeleteEndpoint(ctx context.Context, name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteEndpoint", ctx, name)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteEndpoint indicates an expected call of DeleteEndpoint.
func (mr *MockRemoveEndpointClientMockRecorder) DeleteEndpoint(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEndpoint", reflect.TypeOf((*MockRemoveEndpointClient)(nil).DeleteEndpoint), ctx, name)
}
