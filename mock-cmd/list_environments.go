// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/meroxa/root/environments/list.go

// Package mock_environments is a generated GoMock package.
package mock_cmd

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	meroxa "github.com/meroxa/meroxa-go"
)

// MockListEnvironmentsClient is a mock of listEnvironmentsClient interface.
type MockListEnvironmentsClient struct {
	ctrl     *gomock.Controller
	recorder *MockListEnvironmentsClientMockRecorder
}

// MockListEnvironmentsClientMockRecorder is the mock recorder for MockListEnvironmentsClient.
type MockListEnvironmentsClientMockRecorder struct {
	mock *MockListEnvironmentsClient
}

// NewMockListEnvironmentsClient creates a new mock instance.
func NewMockListEnvironmentsClient(ctrl *gomock.Controller) *MockListEnvironmentsClient {
	mock := &MockListEnvironmentsClient{ctrl: ctrl}
	mock.recorder = &MockListEnvironmentsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockListEnvironmentsClient) EXPECT() *MockListEnvironmentsClientMockRecorder {
	return m.recorder
}

// ListEnvironments mocks base method.
func (m *MockListEnvironmentsClient) ListEnvironments(ctx context.Context) ([]*meroxa.Environment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListEnvironments", ctx)
	ret0, _ := ret[0].([]*meroxa.Environment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListEnvironments indicates an expected call of ListEnvironments.
func (mr *MockListEnvironmentsClientMockRecorder) ListEnvironments(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEnvironments", reflect.TypeOf((*MockListEnvironmentsClient)(nil).ListEnvironments), ctx)
}
