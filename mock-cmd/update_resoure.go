// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/update_resource.go

// Package mock_cmd is a generated GoMock package.
package mock_cmd

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	meroxa "github.com/meroxa/meroxa-go"
)

// MockUpdateResourceClient is a mock of UpdateResourceClient interface.
type MockUpdateResourceClient struct {
	ctrl     *gomock.Controller
	recorder *MockUpdateResourceClientMockRecorder
}

// MockUpdateResourceClientMockRecorder is the mock recorder for MockUpdateResourceClient.
type MockUpdateResourceClientMockRecorder struct {
	mock *MockUpdateResourceClient
}

// NewMockUpdateResourceClient creates a new mock instance.
func NewMockUpdateResourceClient(ctrl *gomock.Controller) *MockUpdateResourceClient {
	mock := &MockUpdateResourceClient{ctrl: ctrl}
	mock.recorder = &MockUpdateResourceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUpdateResourceClient) EXPECT() *MockUpdateResourceClientMockRecorder {
	return m.recorder
}

// UpdateResource mocks base method.
func (m *MockUpdateResourceClient) UpdateResource(ctx context.Context, key string, resourceToUpdate meroxa.UpdateResourceInput) (*meroxa.Resource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateResource", ctx, key, resourceToUpdate)
	ret0, _ := ret[0].(*meroxa.Resource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateResource indicates an expected call of UpdateResource.
func (mr *MockUpdateResourceClientMockRecorder) UpdateResource(ctx, key, resourceToUpdate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateResource", reflect.TypeOf((*MockUpdateResourceClient)(nil).UpdateResource), ctx, key, resourceToUpdate)
}
