// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: turbine/v1/turbine.proto

package core

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Language int32

const (
	Language_GOLANG     Language = 0
	Language_PYTHON     Language = 1
	Language_JAVASCRIPT Language = 2
	Language_RUBY       Language = 3
	Language_JAVA       Language = 4
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "GOLANG",
		1: "PYTHON",
		2: "JAVASCRIPT",
		3: "RUBY",
		4: "JAVA",
	}
	Language_value = map[string]int32{
		"GOLANG":     0,
		"PYTHON":     1,
		"JAVASCRIPT": 2,
		"RUBY":       3,
		"JAVA":       4,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_turbine_v1_turbine_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_turbine_v1_turbine_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{0}
}

type ReadFromSourceRequest_Direction int32

const (
	ReadFromSourceRequest_SOURCE      ReadFromSourceRequest_Direction = 0
	ReadFromSourceRequest_DESTINATION ReadFromSourceRequest_Direction = 1
)

// Enum value maps for ReadFromSourceRequest_Direction.
var (
	ReadFromSourceRequest_Direction_name = map[int32]string{
		0: "SOURCE",
		1: "DESTINATION",
	}
	ReadFromSourceRequest_Direction_value = map[string]int32{
		"SOURCE":      0,
		"DESTINATION": 1,
	}
)

func (x ReadFromSourceRequest_Direction) Enum() *ReadFromSourceRequest_Direction {
	p := new(ReadFromSourceRequest_Direction)
	*p = x
	return p
}

func (x ReadFromSourceRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReadFromSourceRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_turbine_v1_turbine_proto_enumTypes[1].Descriptor()
}

func (ReadFromSourceRequest_Direction) Type() protoreflect.EnumType {
	return &file_turbine_v1_turbine_proto_enumTypes[1]
}

func (x ReadFromSourceRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReadFromSourceRequest_Direction.Descriptor instead.
func (ReadFromSourceRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{0, 0}
}

type ReadFromSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PluginName    string                          `protobuf:"bytes,1,opt,name=pluginName,proto3" json:"pluginName,omitempty"`
	Direction     ReadFromSourceRequest_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=turbine_core.ReadFromSourceRequest_Direction" json:"direction,omitempty"`
	Configuration *Configurations                 `protobuf:"bytes,3,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *ReadFromSourceRequest) Reset() {
	*x = ReadFromSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_turbine_v1_turbine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadFromSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFromSourceRequest) ProtoMessage() {}

func (x *ReadFromSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_turbine_v1_turbine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFromSourceRequest.ProtoReflect.Descriptor instead.
func (*ReadFromSourceRequest) Descriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{0}
}

func (x *ReadFromSourceRequest) GetPluginName() string {
	if x != nil {
		return x.PluginName
	}
	return ""
}

func (x *ReadFromSourceRequest) GetDirection() ReadFromSourceRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return ReadFromSourceRequest_SOURCE
}

func (x *ReadFromSourceRequest) GetConfiguration() *Configurations {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type WriteToDestinationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PluginName    string             `protobuf:"bytes,1,opt,name=pluginName,proto3" json:"pluginName,omitempty"`
	Configuration *Configurations    `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Records       *RecordsCollection `protobuf:"bytes,3,opt,name=records,proto3" json:"records,omitempty"`
}

func (x *WriteToDestinationRequest) Reset() {
	*x = WriteToDestinationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_turbine_v1_turbine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteToDestinationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteToDestinationRequest) ProtoMessage() {}

func (x *WriteToDestinationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_turbine_v1_turbine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteToDestinationRequest.ProtoReflect.Descriptor instead.
func (*WriteToDestinationRequest) Descriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{1}
}

func (x *WriteToDestinationRequest) GetPluginName() string {
	if x != nil {
		return x.PluginName
	}
	return ""
}

func (x *WriteToDestinationRequest) GetConfiguration() *Configurations {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *WriteToDestinationRequest) GetRecords() *RecordsCollection {
	if x != nil {
		return x.Records
	}
	return nil
}

type InitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName        string   `protobuf:"bytes,1,opt,name=appName,proto3" json:"appName,omitempty"`
	ConfigFilePath string   `protobuf:"bytes,2,opt,name=configFilePath,proto3" json:"configFilePath,omitempty"`
	Language       Language `protobuf:"varint,3,opt,name=language,proto3,enum=turbine_core.Language" json:"language,omitempty"`
	GitSHA         string   `protobuf:"bytes,4,opt,name=gitSHA,proto3" json:"gitSHA,omitempty"`
	TurbineVersion string   `protobuf:"bytes,5,opt,name=turbineVersion,proto3" json:"turbineVersion,omitempty"`
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_turbine_v1_turbine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_turbine_v1_turbine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{2}
}

func (x *InitRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *InitRequest) GetConfigFilePath() string {
	if x != nil {
		return x.ConfigFilePath
	}
	return ""
}

func (x *InitRequest) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_GOLANG
}

func (x *InitRequest) GetGitSHA() string {
	if x != nil {
		return x.GitSHA
	}
	return ""
}

func (x *InitRequest) GetTurbineVersion() string {
	if x != nil {
		return x.TurbineVersion
	}
	return ""
}

type RecordsCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Stream  string    `protobuf:"bytes,2,opt,name=stream,proto3" json:"stream,omitempty"`
}

func (x *RecordsCollection) Reset() {
	*x = RecordsCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_turbine_v1_turbine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordsCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordsCollection) ProtoMessage() {}

func (x *RecordsCollection) ProtoReflect() protoreflect.Message {
	mi := &file_turbine_v1_turbine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordsCollection.ProtoReflect.Descriptor instead.
func (*RecordsCollection) Descriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{3}
}

func (x *RecordsCollection) GetRecords() []*Record {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *RecordsCollection) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value     []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_turbine_v1_turbine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_turbine_v1_turbine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{4}
}

func (x *Record) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Record) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Record) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Configurations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration []*Configuration `protobuf:"bytes,1,rep,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *Configurations) Reset() {
	*x = Configurations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_turbine_v1_turbine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Configurations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configurations) ProtoMessage() {}

func (x *Configurations) ProtoReflect() protoreflect.Message {
	mi := &file_turbine_v1_turbine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configurations.ProtoReflect.Descriptor instead.
func (*Configurations) Descriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{5}
}

func (x *Configurations) GetConfiguration() []*Configuration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type Configuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_turbine_v1_turbine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_turbine_v1_turbine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configuration.ProtoReflect.Descriptor instead.
func (*Configuration) Descriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{6}
}

func (x *Configuration) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Configuration) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ProcessRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *ProcessRecordsRequest_Process `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	Records *RecordsCollection             `protobuf:"bytes,2,opt,name=records,proto3" json:"records,omitempty"`
}

func (x *ProcessRecordsRequest) Reset() {
	*x = ProcessRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_turbine_v1_turbine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRecordsRequest) ProtoMessage() {}

func (x *ProcessRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_turbine_v1_turbine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRecordsRequest.ProtoReflect.Descriptor instead.
func (*ProcessRecordsRequest) Descriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessRecordsRequest) GetProcess() *ProcessRecordsRequest_Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *ProcessRecordsRequest) GetRecords() *RecordsCollection {
	if x != nil {
		return x.Records
	}
	return nil
}

type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Secret) Reset() {
	*x = Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_turbine_v1_turbine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_turbine_v1_turbine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{8}
}

func (x *Secret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Secret) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *GetSpecRequest) Reset() {
	*x = GetSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_turbine_v1_turbine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecRequest) ProtoMessage() {}

func (x *GetSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_turbine_v1_turbine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecRequest.ProtoReflect.Descriptor instead.
func (*GetSpecRequest) Descriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{9}
}

func (x *GetSpecRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type GetSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec []byte `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *GetSpecResponse) Reset() {
	*x = GetSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_turbine_v1_turbine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecResponse) ProtoMessage() {}

func (x *GetSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_turbine_v1_turbine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecResponse.ProtoReflect.Descriptor instead.
func (*GetSpecResponse) Descriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{10}
}

func (x *GetSpecResponse) GetSpec() []byte {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ProcessRecordsRequest_Process struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ProcessRecordsRequest_Process) Reset() {
	*x = ProcessRecordsRequest_Process{}
	if protoimpl.UnsafeEnabled {
		mi := &file_turbine_v1_turbine_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessRecordsRequest_Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRecordsRequest_Process) ProtoMessage() {}

func (x *ProcessRecordsRequest_Process) ProtoReflect() protoreflect.Message {
	mi := &file_turbine_v1_turbine_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRecordsRequest_Process.ProtoReflect.Descriptor instead.
func (*ProcessRecordsRequest_Process) Descriptor() ([]byte, []int) {
	return file_turbine_v1_turbine_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ProcessRecordsRequest_Process) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_turbine_v1_turbine_proto protoreflect.FileDescriptor

var file_turbine_v1_turbine_proto_rawDesc = []byte{
	0x0a, 0x18, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x75, 0x72,
	0x62, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x74, 0x75, 0x72, 0x62,
	0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xf2, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x74,
	0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x09, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x01, 0x22, 0xba, 0x01, 0x0a, 0x19, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x6f,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x75, 0x72, 0x62,
	0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e,
	0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0xdf, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e,
	0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x53, 0x48, 0x41, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x74, 0x53, 0x48, 0x41, 0x12, 0x26, 0x0a, 0x0e, 0x74,
	0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x75, 0x72, 0x62,
	0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x22, 0x73, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x53, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3b, 0x0a, 0x0d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4f, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x1d, 0x0a,
	0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x06,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x26, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x2a, 0x46, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x47, 0x4f, 0x4c, 0x41, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x59, 0x54,
	0x48, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4a, 0x41, 0x56, 0x41, 0x53, 0x43, 0x52,
	0x49, 0x50, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x55, 0x42, 0x59, 0x10, 0x03, 0x12,
	0x08, 0x0a, 0x04, 0x4a, 0x41, 0x56, 0x41, 0x10, 0x04, 0x32, 0xd7, 0x03, 0x0a, 0x0e, 0x54, 0x75,
	0x72, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x04,
	0x49, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x2e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x56, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x46,
	0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x2e, 0x74, 0x75, 0x72, 0x62,
	0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4f, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x2e, 0x74, 0x75, 0x72,
	0x62, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x55, 0x0a, 0x12, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x0c, 0x48, 0x61, 0x73, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1c, 0x2e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65,
	0x5f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x5f, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x3c, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x72, 0x6f, 0x78,
	0x61, 0x2e, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65,
	0x72, 0x6f, 0x78, 0x61, 0x2f, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x65, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_turbine_v1_turbine_proto_rawDescOnce sync.Once
	file_turbine_v1_turbine_proto_rawDescData = file_turbine_v1_turbine_proto_rawDesc
)

func file_turbine_v1_turbine_proto_rawDescGZIP() []byte {
	file_turbine_v1_turbine_proto_rawDescOnce.Do(func() {
		file_turbine_v1_turbine_proto_rawDescData = protoimpl.X.CompressGZIP(file_turbine_v1_turbine_proto_rawDescData)
	})
	return file_turbine_v1_turbine_proto_rawDescData
}

var file_turbine_v1_turbine_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_turbine_v1_turbine_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_turbine_v1_turbine_proto_goTypes = []interface{}{
	(Language)(0),                         // 0: turbine_core.Language
	(ReadFromSourceRequest_Direction)(0),  // 1: turbine_core.ReadFromSourceRequest.Direction
	(*ReadFromSourceRequest)(nil),         // 2: turbine_core.ReadFromSourceRequest
	(*WriteToDestinationRequest)(nil),     // 3: turbine_core.WriteToDestinationRequest
	(*InitRequest)(nil),                   // 4: turbine_core.InitRequest
	(*RecordsCollection)(nil),             // 5: turbine_core.RecordsCollection
	(*Record)(nil),                        // 6: turbine_core.Record
	(*Configurations)(nil),                // 7: turbine_core.Configurations
	(*Configuration)(nil),                 // 8: turbine_core.Configuration
	(*ProcessRecordsRequest)(nil),         // 9: turbine_core.ProcessRecordsRequest
	(*Secret)(nil),                        // 10: turbine_core.Secret
	(*GetSpecRequest)(nil),                // 11: turbine_core.GetSpecRequest
	(*GetSpecResponse)(nil),               // 12: turbine_core.GetSpecResponse
	(*ProcessRecordsRequest_Process)(nil), // 13: turbine_core.ProcessRecordsRequest.Process
	(*timestamppb.Timestamp)(nil),         // 14: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                 // 15: google.protobuf.Empty
	(*wrapperspb.BoolValue)(nil),          // 16: google.protobuf.BoolValue
}
var file_turbine_v1_turbine_proto_depIdxs = []int32{
	1,  // 0: turbine_core.ReadFromSourceRequest.direction:type_name -> turbine_core.ReadFromSourceRequest.Direction
	7,  // 1: turbine_core.ReadFromSourceRequest.configuration:type_name -> turbine_core.Configurations
	7,  // 2: turbine_core.WriteToDestinationRequest.configuration:type_name -> turbine_core.Configurations
	5,  // 3: turbine_core.WriteToDestinationRequest.records:type_name -> turbine_core.RecordsCollection
	0,  // 4: turbine_core.InitRequest.language:type_name -> turbine_core.Language
	6,  // 5: turbine_core.RecordsCollection.records:type_name -> turbine_core.Record
	14, // 6: turbine_core.Record.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 7: turbine_core.Configurations.configuration:type_name -> turbine_core.Configuration
	13, // 8: turbine_core.ProcessRecordsRequest.process:type_name -> turbine_core.ProcessRecordsRequest.Process
	5,  // 9: turbine_core.ProcessRecordsRequest.records:type_name -> turbine_core.RecordsCollection
	4,  // 10: turbine_core.TurbineService.Init:input_type -> turbine_core.InitRequest
	2,  // 11: turbine_core.TurbineService.ReadFromSource:input_type -> turbine_core.ReadFromSourceRequest
	9,  // 12: turbine_core.TurbineService.Process:input_type -> turbine_core.ProcessRecordsRequest
	3,  // 13: turbine_core.TurbineService.WriteToDestination:input_type -> turbine_core.WriteToDestinationRequest
	15, // 14: turbine_core.TurbineService.HasFunctions:input_type -> google.protobuf.Empty
	11, // 15: turbine_core.TurbineService.GetSpec:input_type -> turbine_core.GetSpecRequest
	15, // 16: turbine_core.TurbineService.Init:output_type -> google.protobuf.Empty
	5,  // 17: turbine_core.TurbineService.ReadFromSource:output_type -> turbine_core.RecordsCollection
	5,  // 18: turbine_core.TurbineService.Process:output_type -> turbine_core.RecordsCollection
	15, // 19: turbine_core.TurbineService.WriteToDestination:output_type -> google.protobuf.Empty
	16, // 20: turbine_core.TurbineService.HasFunctions:output_type -> google.protobuf.BoolValue
	12, // 21: turbine_core.TurbineService.GetSpec:output_type -> turbine_core.GetSpecResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_turbine_v1_turbine_proto_init() }
func file_turbine_v1_turbine_proto_init() {
	if File_turbine_v1_turbine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_turbine_v1_turbine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadFromSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_turbine_v1_turbine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteToDestinationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_turbine_v1_turbine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_turbine_v1_turbine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordsCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_turbine_v1_turbine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_turbine_v1_turbine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Configurations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_turbine_v1_turbine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Configuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_turbine_v1_turbine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_turbine_v1_turbine_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_turbine_v1_turbine_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_turbine_v1_turbine_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_turbine_v1_turbine_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessRecordsRequest_Process); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_turbine_v1_turbine_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_turbine_v1_turbine_proto_goTypes,
		DependencyIndexes: file_turbine_v1_turbine_proto_depIdxs,
		EnumInfos:         file_turbine_v1_turbine_proto_enumTypes,
		MessageInfos:      file_turbine_v1_turbine_proto_msgTypes,
	}.Build()
	File_turbine_v1_turbine_proto = out.File
	file_turbine_v1_turbine_proto_rawDesc = nil
	file_turbine_v1_turbine_proto_goTypes = nil
	file_turbine_v1_turbine_proto_depIdxs = nil
}
