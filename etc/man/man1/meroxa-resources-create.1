.nh
.TH "Meroxa" "1" "Aug 2023" "Meroxa CLI " "Meroxa Manual"

.SH NAME
.PP
meroxa-resources-create - Add a resource to your Meroxa resource catalog


.SH SYNOPSIS
.PP
\fBmeroxa resources create [NAME] --type TYPE --url URL [flags]\fP


.SH DESCRIPTION
.PP
Use the create command to add resources to your Meroxa resource catalog.


.SH OPTIONS
.PP
\fB--ca-cert\fP=""
	trusted certificates for verifying resource

.PP
\fB--client-cert\fP=""
	client certificate for authenticating to the resource

.PP
\fB--client-key\fP=""
	client private key for authenticating to the resource

.PP
\fB--env\fP=""
	environment (name or UUID) where resource will be created

.PP
\fB-h\fP, \fB--help\fP[=false]
	help for create

.PP
\fB-m\fP, \fB--metadata\fP=""
	resource metadata

.PP
\fB--password\fP=""
	password

.PP
\fB--private-key-file\fP=""
	path to private key file

.PP
\fB--ssh-private-key\fP=""
	SSH tunneling private key

.PP
\fB--ssh-url\fP=""
	SSH tunneling address

.PP
\fB--ssl\fP[=false]
	use SSL

.PP
\fB--token\fP=""
	API Token

.PP
\fB--type\fP=""
	resource type (required)

.PP
\fB-u\fP, \fB--url\fP=""
	resource url

.PP
\fB--username\fP=""
	username


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB--cli-config-file\fP=""
	meroxa configuration file

.PP
\fB--debug\fP[=false]
	display any debugging information

.PP
\fB--json\fP[=false]
	output json

.PP
\fB--timeout\fP=10s
	set the duration of the client timeout in seconds


.SH EXAMPLE
.PP
.RS

.nf

$ meroxa resource create mybigquery \\
    --type bigquery \\
    -u "bigquery://$GCP_PROJECT_ID/$GCP_DATASET_NAME" \\
    --client-key "$(cat $GCP_SERVICE_ACCOUNT_JSON_FILE)"

$ meroxa resource create sourcedb \\
	--type confluentcloud \\
	--url kafka+sasl+ssl://$API_KEY:$API_SECRET@<$BOOTSTRAP_SERVER>?sasl_mechanism=plain

$ meroxa resource create meteor \\
	--type cosmosdb \\
	--url cosmosdb://user:pass@org.documents.azure.com:443/pluto

$ meroxa resource create elasticsearch \\
    --type elasticsearch \\
    -u "https://$ES_USER:$ES_PASS@$ES_URL:$ES_PORT" \\
    --metadata '{"index.prefix": "$ES_INDEX","incrementing.field.name": "$ES_INCREMENTING_FIELD"}'

$ meroxa resource create sourcedb \\
	--type kafka \\
	--url kafka+sasl+ssl://$KAFKA_USER:$KAFKA_PASS@<$BOOTSTRAP_SERVER>?sasl_mechanism=plain

$ meroxa resource create mongo \\
    --type mongodb \\
    -u "mongodb://$MONGO_USER:$MONGO_PASS@$MONGO_URL:$MONGO_PORT"

$ meroxa resource create mysqldb \\
    --type mysql \\
    --url "mysql://$MYSQL_USER:$MYSQL_PASS@$MYSQL_URL:$MYSQL_PORT/$MYSQL_DB"

$ meroxa resource create workspace \\
	--type notion \\
	--token AbCdEfG123456

$ meroxa resource create workspace \\
	--type oracledb \\
	--url oracle://user:password@host.com:1521/database

$ meroxa resources create store \\
	--type postgres \\
	-u "$DATABASE_URL" \\
	--metadata '{"logical_replication":"true"}'

$ meroxa resources create warehouse \\
	--type redshift \\
	-u "$REDSHIFT_URL" \\
    --ssh-url ssh://user@password@example.elb.us-east-1.amazonaws.com:22 \\
	--private-key-file ~/.ssh/my-key

$ meroxa resources create datalake \\
	--type s3 \\
	-u "s3://$AWS_ACCESS_KEY_ID:$AWS_ACCESS_KEY_SECRET@us-east-1/meroxa-demos"

$ meroxa resource create snowflake \\
    --type snowflakedb \\
    -u "snowflake://$SNOWFLAKE_URL/meroxa_db/stream_data" \\
    --username meroxa_user \\
    --private-key-file /Users/me/.ssh/snowflake_ed25519

$ meroxa resource create hr \\
	--type sqlserver \\
	--url "sqlserver://$MSSQL_USER:$MSSQL_PASS@$MSSQL_URL:$MSSQL_PORT/$MSSQL_DB"

$ meroxa resources create slack \\
	--type url \\
	-u "$WEBHOOK_URL"

.fi
.RE


.SH SEE ALSO
.PP
\fBmeroxa-resources(1)\fP
